install.packages("rbcb")
search_series("FOCUS")
library(rbcb)
search_series("FOCUS")
IPCA <- BETS.get(13522,
from = "2000-01-01", to = "2017-07-01")
IPCA <- BETS.get(13522,
from = "2000-01-01", to = "2016-01-01")
desemprego <-BETS.get(10777,
from = "2002-01-01")
IPCA <- BETS.get(13522,
from = "2002-01-01", to = "2016-01-01")
desemprego <-BETS.get(10777,
from = "2002-06-01")
IPCA <- BETS.get(13522,
from = "2002-06-01", to = "2016-01-01")
desemprego <-BETS.get(10777,
from = "2002-06-01", to ="2016-01-01")
IPCA <- BETS.get(13522,
from = "2002-06-01", to = "2016-01-01")
library(foreign)
library(forecast)
ndiffs(IPCA)
dIPCA <- diff(IPCA)
modelomerda <- lm(dIPCA ~ desempreço[-1])
modelomerda <- lm(dIPCA ~ desemprego[-1])
summary(modelomerda)
slope <- coef(modelomerda)
NAIRU <- desemprego[-1] - slope
desemprego <- desempregp[-1]
desemprego <- desemprego[-1]
modelomerda <- lm(dIPCA ~ desemprego)
summary(modelomerda)
slope <- coef(modelomerda)
NAIRU <- desemprego[-1] - slope
NAIRU <- desemprego - slope
NAIRU <- desemprego[-1] - slope
NAIRU
plot(desemprego, NAIRU)
desemprego
hiatoemprego <- desemprego - NAIRU
hiatoemprego <- desemprego[-1] - NAIRU
hiatoemprego
install.packages("AER")
install.packages("pwt9")
install.packages("rddtools")
install.packages("ivpack")
install.packages("mFilters")
install.packages(c("dplyr", "openssl", "rstudioapi"))
install.packages("mFilter")
library(BETS)
library(foreign)
library(forecast)
library(mFilter)
desemprego <-BETS.get(10777,
from = "2002-06-01", to ="2016-01-01")
IPCA <- BETS.get(13522,
from = "2002-06-01", to = "2016-01-01")
dIPCA <- diff(IPCA)
desemprego <- desemprego[-1]
modelomerda <- lm(dIPCA ~ desemprego)
summary(modelomerda)
NAIRU <- hpfilter(desemprego, freq = 1600)
HUNEMP <- desemprego - NAIRU
NAIRU
summary(HUNEMP)
summary(NAIRU)
library(BETS)
IPCA = BETS.get(433)
library(readxl)
data = data.frame(IPCA)
install.packages("WriteXLS")
library(WriteXLS)
WriteXLS(data)
WriteXLS(data, ExcelFileName = "IPCA.xls", )
WriteXLS(data, ExcelFileName = "IPCA.xls" )
WriteXLS(data, ExcelFileName = "IPCA.xls", SheetNames = "Aba", row.names = TRUE, col.names = TRUE)
WriteXLS(data, ExcelFileName = "IPCA.xls", SheetNames = "Aba", row.names = TRUE, col.names = TRUE)
WriteXLS(data, ExcelFileName = "IPCA.xls", SheetNames = "Aba", row.names = TRUE, col.names = TRUE, AdjWidth = FALSE, AutoFilter = FALSE,
BoldHeaderRow = TRUE)
library(readxl)
final_BD_MUNIC_1996_2016_orcament <- read_excel("C:/Users/Pichau/Dropbox/DadosAtualizados/final - BD_MUNIC_1996_2016_orcament.xlsx")
View(final_BD_MUNIC_1996_2016_orcament)
install.packages(c("backports", "BETS", "chron", "curl", "data.table", "devtools", "dplyr", "forecast", "glue", "lazyeval", "lme4", "lubridate", "openssl", "PKI", "plm", "purrr", "quantmod", "quantreg", "Rcpp", "RcppArmadillo", "rJava", "rlang", "rmarkdown", "tidyr", "tidyselect", "webshot", "withr"))
install.packages("wbstats")
library(wbstats)
wbsearch("inequality")
wb(country = ="all", IC.BUS.EASE.XQ)
wb(country ="all", IC.BUS.EASE.XQ)
wb(country ="all", indicator = "IC.BUS.EASE.XQ")
EAB = wb(country ="all", indicator = "IC.BUS.EASE.XQ")
GINI = wb(country ="all", indicator = "SI.POV.GINI", startdate = 2016, enddate = 2016)
reg <- lm(GINI ~ EAB)
summary(reg)
View(EAB)
View(GINI)
View(EAB)
library(wbstats)
EAB = wb(country ="all", indicator = "IC.BUS.EASE.XQ", startdate = 2015, enddate = 2015)
GINI = wb(country ="all", indicator = "SI.POV.GINI", startdate = 2015, enddate = 2015)
View(EAB)
View(GINI)
Data <- data.frame(EAB$value, EAB$country, GINI$country, GINI$value)
Data <- data.frame(window(EAB$value, EAB$country, GINI$country, GINI$value))
data
library(haven)
library(timevis)
library(readxl)
timeline <- read_excel("C:/Users/Pichau/Dropbox/IPG_Projetos_PMDB/base_timeline.xlsx")
View(timeline)
id <- (1:82)
id
timeline$id <- (1:82)
timeline$id
library(BETS)
library(forecast)
library(xts)
IPCA <- BETS.get(433,
from = "1997-01-01",
to = "2015-01-01")
Cambio <- BETS.get(11758,
from = "1998-01-01",
to = "2015-01-01")
PIB <- BETS.deflate(BETS.get(4192,
from = "1998-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = "perc")
Resultado <- ((rollsum(BETS.deflate(BETS.get(7544,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type='perc') / BETS.deflate(BETS.get(3696,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = 'perc'),
12,
fill = NA,
align = "right")) - (rollsum(BETS.deflate(BETS.get(7546,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type='perc') /
BETS.deflate(BETS.get(3696,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = 'perc'),
12,
fill = NA,
align = "right"))) / BETS.deflate(BETS.get(4192,
from = "1998-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = "perc")
Balança <- ((rollsum(BETS.deflate(BETS.get(2733,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = 'perc'),
12,
fil = NA,
align = "right"))  - (rollsum(BETS.deflate(BETS.get(2734,
from = "1997-01-01",
to = "2015-01-01"),
IPCA,
type = 'perc'),
12,
fil = NA,
align = "right"))) /  BETS.deflate(BETS.get(4192,
from = "1998-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = "perc")
DADOS <- ts.intersect(Balança, Cambio, Resultado,
dframe = TRUE)
ndiffs(exportações)
ndiffs(cambio)
ndiffs(Balança)
ndiffs(cambio)
ndiffs(Cambio)
ddbalança = diff(diff(Balança))
dcambio = diff(Cambio)
modelo <- lm(formula = Balança ~ Cambio + Resultado)
modelo2 <- lm(formula = ddbalança ~ dcambio + Resultado)
summary(modelo)
summary(modelo2)
modelo2 <- lm(formula = ddbalança ~ dcambio[,-1] + Resultado)
modelo <- lm(formula = Balança ~ Cambio + Resultado)
summary(modelo)
Resultado
plot(Resultado)
library(forecast)
library(lmtest)
library(readxl)
pwt90 <- read_excel("C:/Users/Pichau/Desktop/Meus Dados/Penn World Table database - Universidade de Gronnigen/PWT 9.0/pwt90.xlsx",
sheet = "Data")
View(pwt90)
pwt90$produtoporL <- pwt90$rgdpo / pwt90$emp
pwt90$capitalporL <- pwt90$ck / pwt90$emp
pwt90$poupançapeloPIB <- 1 - pwt90$csh_c - pwt90$csh_g
pwt90$produtoporL[pwt90$produtoporL>604277.61] <- NA
pwt90$poupançapeloPIB[pwt90$poupançapeloPIB>1] <- NA
pwt90$poupançapeloPIB[pwt90$poupançapeloPIB<(-1)] <- NA
Anotreze <- subset(pwt90, year == 2013)
Brasil <- subset(pwt90, countrycode == "BRA")
summary(pwt90$capitalporL)
summary(pwt90$produtoporL)
impactoacumulocapital <- lm(formula = Anotreze$produtoporL ~ Anotreze$capitalporL)
impactopoupançabrasil <- lm(formula = Brasil$csh_i ~ Brasil$poupançapeloPIB)
summary(impactoacumulocapital)
summary(impactopoupançabrasil)
plot(Brasil$csh_i ~ Brasil$poupançapeloPIB)
plot(Anotreze$produtoporL ~ Anotreze$capitalporL)
ndiffs(Brasil$poupançapeloPIB, alpha=0.05, test=c("kpss"))
ndiffs(Brasil$csh_i, alpha=0.05, test=c("kpss"))
ndiffs(Anotreze$poupançapeloPIB, alpha=0.05, test=c("kpss"))
ndiffs(Anotreze$csh_i, alpha=0.05, test=c("kpss"))
dpoupança <- diff(Anotreze$poupançapeloPIB)
dinvestimento <- diff(Anotreze$csh_i)
select.lags<-function(x,y,max.lag=100) {
y<-as.numeric(y)
y.lag<-embed(y,max.lag+1)[,-1,drop=FALSE]
x.lag<-embed(x,max.lag+1)[,-1,drop=FALSE]
t<-tail(seq_along(y),nrow(y.lag))
ms=lapply(1:max.lag,function(i) lm(y[t]~y.lag[,1:i]+x.lag[,1:i]))
pvals<-mapply(function(i) anova(ms[[i]],ms[[i-1]])[2,"Pr(>F)"],max.lag:2)
ind<-which(pvals<0.05)[1]
ftest<-ifelse(is.na(ind),1,max.lag-ind+1)
aic<-as.numeric(lapply(ms,AIC))
bic<-as.numeric(lapply(ms,BIC))
structure(list(ic=cbind(aic=aic,bic=bic),pvals=pvals,
selection=list(aic=which.min(aic),bic=which.min(bic),ftest=ftest)))
}
s<-select.lags(dpoupança,dinvestimento,20)
t(s$selection)
grangertest(dinvestimento ~ lag(dpoupança), order=1)
grangertest(dpoupança ~ dinvestimento, order=1)
grangertest(Anotreze$csh_i ~ Anotreze$poupançapeloPIB, order=1)
grangertest(dinvestimento ~ lag(dpoupança), order=12)
grangertest(dpoupança ~ dinvestimento, order=12)
grangertest(Anotreze$csh_i ~ Anotreze$poupançapeloPIB, order=12)
library(forecast)
library(lmtest)
library(readxl)
pwt90 <- read_excel("C:/Users/Pichau/Desktop/Meus Dados/Penn World Table database - Universidade de Gronnigen/PWT 9.0/pwt90.xlsx",
sheet = "Data")
View(pwt90)
pwt90$produtoporL <- pwt90$rgdpo / pwt90$emp
pwt90$capitalporL <- pwt90$ck / pwt90$emp
pwt90$poupançapeloPIB <- 1 - pwt90$csh_c - pwt90$csh_g
pwt90$produtoporL[pwt90$produtoporL>604277.61] <- NA
pwt90$poupançapeloPIB[pwt90$poupançapeloPIB>1] <- NA
pwt90$poupançapeloPIB[pwt90$poupançapeloPIB<(-1)] <- NA
Anotreze <- subset(pwt90, year == 2013)
Brasil <- subset(pwt90, countrycode == "BRA")
summary(pwt90$capitalporL)
summary(pwt90$produtoporL)
impactoacumulocapital <- lm(formula = Anotreze$produtoporL ~ Anotreze$capitalporL)
impactopoupançabrasil <- lm(formula = Brasil$csh_i ~ Brasil$poupançapeloPIB)
summary(impactoacumulocapital)
summary(impactopoupançabrasil)
plot(Brasil$csh_i ~ Brasil$poupançapeloPIB)
plot(Anotreze$produtoporL ~ Anotreze$capitalporL)
install.packages("tidyverse")
install.packages("tidyverse")
library(xlsx)
library(BETS)
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
AbEx <- ((rollsum(BETS.deflate(BETS.get(2733), BETS.get(433), type = 'perc'),
12,
fil = NA,
align = "right"))  + (rollsum(BETS.deflate(BETS.get(2734),
IPCA,
type = 'perc'),
12,
fil = NA,
align = "right"))) /  BETS.deflate(BETS.get(4192),
BETS.get(433),
type = "perc")
library(zoo)
AbEx <- ((rollsum(BETS.deflate(BETS.get(2733), BETS.get(433), type = 'perc'),
12,
fil = NA,
align = "right"))  + (rollsum(BETS.deflate(BETS.get(2734),
IPCA,
type = 'perc'),
12,
fil = NA,
align = "right"))) /  BETS.deflate(BETS.get(4192),
BETS.get(433),
type = "perc")
AbEx
library(xlsx)
library(BETS)
library(zoo)
Expo <- bets.get(2943)
Impo <- bet.get(3034)
Expo <- BETS.get(2943)
Impo <- BETS.get(3034)
impo
Impo
Expo <- BETS.get(2943)
Impo <- BETS.get(3034)
PIB <- BETS.get(4385)
dados <- ts.intersect(Expo, Impo, PIB, dframe = TRUE)
write.xlsx(dados, file = "\\DESKTOP\Users\Pichau\Google Drive\Meus Dados")
write.xlsx(dados, file = "\\DESKTOP/Users\Pichau\Google Drive\Meus Dados")
write.xlsx(dados, file = "\\DESKTOP/Users/Pichau/Google Drive/Meus Dados")
install.packages("r2excel")
library(r2excel)
write.xlsx(dados, file = "\\DESKTOP/Users/Pichau/Google Drive/Meus Dados")
install.packages("PNADcIBGE")
source('~/.active-rstudio-document', echo=TRUE)
library(PNADcIBGE)
library(foreign)
pnad <- get_pnadc(year = 2017, quarter = 4)
write.dta(pnad, "C:\Users\pedro\Desktop")
write.dta(pnad, "C:\users\pedro\Desktop")
#pacotes
library(BETS)
library(forecast)
library(xts)
#############variáveis declaradas para 1997-2015
IPCA <- BETS.get(433,
from = "1997-01-01",
to = "2015-01-01")
Cambio <- BETS.get(11758,
from = "1998-01-01",
to = "2015-01-01")
PIB <- BETS.deflate(BETS.get(4192,
from = "1998-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = "perc")
#Rollsum com parâmtro 12 soma em qualquer ponto do vetor os últimos 12 períodos do vetor, depois,
#se divide pela taxa de câmbio para se obter valores em dólares
#Resultado e Balança expressos em % do PIB
Resultado <- ((rollsum(BETS.deflate(BETS.get(7544,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type='perc') / BETS.deflate(BETS.get(3696,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = 'perc'),
12,
fill = NA,
align = "right")) - (rollsum(BETS.deflate(BETS.get(7546,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type='perc') /
BETS.deflate(BETS.get(3696,
from = "1997-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = 'perc'),
12,
fill = NA,
align = "right"))) / BETS.deflate(BETS.get(4192,
from = "1998-01-01",
to = "2015-01-01"),
BETS.get(433,
from = "1997-01-01",
to = "2015-01-01"),
type = "perc")
library(readxl)
prouni <- read_excel("C:\Users\pedro\Google Drive\Dados\Próprios\prouni.xlsx",
sheet = "Formatados_para_rodar")
prouni <- read_excel("C:/Users/pedro/Google Drive/Dados/Próprios/prouni.xlsx",
sheet = "Formatados_para_rodar")
library(readxl)
prouni <- read_excel("C:/Users/pedro/Google Drive/Dados/Próprios/prouni.xlsx",
sheet = "Formatados_para_rodar")
View(prouni)
coercivo <- data.frame(prouni$mensalidade, prouni$Medicina,
prouni$nota_integral_ampla)
coercivo$dropador <- complete.cases(coercivo)
summary(coercivo$dropador)
final <- coercivo[coercivo$dropador == TRUE,]
final$dropador <- NULL
set.seed(100)
analise <- kmeans(final, centers = 4)
plot(final, col = analise$cluster)
analise <- kmeans(final, centers = 3)
plot(final, col = analise$cluster)
analise <- kmeans(final, centers = 2)
plot(final, col = analise$cluster)
install.packages(cluster)
install.packages(dbscan)
install.packages("dbscan")
install.packages("cluster")
analise2 <- dbscan(final, eps = 1)
library(dbscan)
analise2 <- dbscan(final, eps = 1)
summary(analise2)
plot(final, col = analise2$cluster)
plot(x= final$prouni.mensalidade, y= final$prouni.nota_integral_ampla, col = analise2$cluster)
hullplot(x= final$prouni.mensalidade, y= final$prouni.nota_integral_ampla, col = analise2$cluster)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 2)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 0)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 0.5)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 1)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 100)
hullplot(final, cl = analise2$cluster)
summary(analise2)
summary(final)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 50)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 1000)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 200)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 200, minPts = 50)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 200, minPts = 20)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 150, minPts = '0)
analise2 <- dbscan(final, eps = 150, minPts = 10)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 150)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 100)
hullplot(final, cl = analise2$cluster)
hullplot(final, cl = analise2$cluster)
library(dbscan)
library(readxl)
prouni <- read_excel("C:/Users/pedro/Google Drive/Dados/Próprios/prouni.xlsx",
sheet = "Formatados_para_rodar")
coercivo <- data.frame(prouni$mensalidade, prouni$Medicina,
prouni$nota_integral_ampla)
coercivo$dropador <- complete.cases(coercivo)
final <- coercivo[coercivo$dropador == TRUE,]
final$dropador <- NULL
set.seed(100)
analise2 <- dbscan(final, eps = 100)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 150)
hullplot(final, cl = analise2$cluster)
analise2 <- dbscan(final, eps = 120)
hullplot(final, cl = analise2$cluster)
install.packages("mclust")
analise3 <- mclust(final)
analise3 <- Mclust(final)
library(mclust)
analise3 <- Mclust(final)
plot(analise3)
install.packages("blogdown")
setwd("C:\Users\pedro\Desktop\azul")
library(BETS) # Pacote para baixar o dados
divida = BETSget(4536) # Baixando série de dívida
library(dplyr) # Pacote para ler a manipular bases mais facilmente
divida %>%
plot(col = "blue", ylab = "Dívida/PIB (em %)") # gerando um gráfico para visualização
library(readr) ## Pacote para ler e salvar bases de dados
dados = data.frame(divida) # Gerando uma estrutura de dados apropriada
write_excel_csv(dados, path = getwd(), col_names = TRUE) #salvando um arquivo de excel com os dados
setwd("C:/Users/pedro")
write_excel_csv(dados, path = getwd(), col_names = TRUE) #salvando um arquivo de excel com os dados
write_csv(dados, path = getwd(), col_names = TRUE) #salvando um arquivo de excel com os dados
write_csv(dados, path = getwd()) #salvando um arquivo de excel com os dados
getwd()
write_csv(dados, path = "C:/Users/pedro", col_names = TRUE) #salvando um arquivo de excel com os dados
write_csv(dados, path = getwd(), col_names = TRUE) #salvando um arquivo de excel com os dados
setwd("C:/Users/pedro/Desktop/Setor-P-blico")
write_csv(dados, path = getwd(), col_names = TRUE) #salvando um arquivo de excel com os dados
saveRDS(dados, file = "dados.rds")
# para saber onde ele salva o arquivo, rode a linha de código abaixo
getwd()
library(BETS) # Pacote para baixar o dados
divida = BETSget(4536) # Baixando série de dívida
divida %>%
plot(col = "blue", ylab = "Dívida/PIB (em %)") # gerando um gráfico para visualização
# para saber onde ele salva o arquivo, rode a linha de código abaixo
getwd()
